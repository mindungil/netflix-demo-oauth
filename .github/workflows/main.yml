name: Deploy React App
on: 
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v3

      # 2. Node.js 환경 설정
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3. Node Modules 캐싱
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # 4. 환경 변수 설정
      - name: Set environment variables
        run: |
          echo "REACT_APP_RESTAPI_KEY=${{ secrets.REACT_APP_RESTAPI_KEY }}" >> .env-prod
          echo "REACT_APP_REDIRECT_URI=${{ secrets.REACT_APP_REDIRECT_URI }}" >> .env-prod
          echo "REACT_APP_JS_KEY=${{ secrets.REACT_APP_JS_KEY }}" >> .env-prod
          echo "REACT_APP_TMDB_URL=${{ secrets.REACT_APP_TMDB_URL }}" >> .env-prod
          echo "REACT_APP_TMDB_API=${{ secrets.REACT_APP_TMDB_API }}" >> .env-prod
        env:
          REACT_APP_RESTAPI_KEY: ${{ secrets.REACT_APP_RESTAPI_KEY }}
          REACT_APP_REDIRECT_URI: ${{ secrets.REACT_APP_REDIRECT_URI }}
          REACT_APP_JS_KEY: ${{ secrets.REACT_APP_JS_KEY }}
          REACT_APP_TMDB_URL: ${{ secrets.REACT_APP_TMDB_URL }}
          REACT_APP_TMDB_API: ${{ secrets.REACT_APP_TMDB_API }}

      # 5. 의존성 설치 및 프로덕션 빌드
      - name: Install dependencies and build (Production)
        run: |
          npm install
          CI=false npm run build:prod

      # 6. GitHub Pages에 배포
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          publish_branch: gh-pages # gh-pages에 빌드 파일이 올라가도록 직접 설정
